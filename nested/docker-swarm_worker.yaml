## NESTED ##
heat_template_version: 2013-05-23

description: >
  Created 1/24/17 by demo. For Cloud AutoScalng Group in blueprint 'docker-swarm'

parameters:
  worker:
    type: string
    description: 'OS Image for the web server'
  flavor:
    type: string
    description: 'Flavor to be used for compute instance'
  key_name:
    type: string
    description: 'For most clouds, the name of the key-pair to be used for the compute instance; for VMware clouds, the contents of the public SSH key for the compute instance'
  availability_zone:
    type: string
    description: 'Name of availability zone in which to create the instance'
  private_network_id:
    type: string
    description: 'Generated to reference ''private_network_id'' network.'
  ucd_server_url:
    default: http://192.168.27.100:8080
    type: string
    description: 'The server URL for agent communication to UrbanCode Deploy. Do *not* add a trailing slash.'
  ucd_user:
    default: PasswordIsAuthToken
    type: string
    description: 'The user credential for the UrbanCode Deploy server.'
  ucd_password:
    type: string
    description: 'The user credential for the UrbanCode Deploy server.'
    hidden: true
  application_name:
    type: string
    description: 'Generated'
  environment_name:
    type: string
    description: 'Generated'
  ucd_relay_url:
    type: string
    description: 'The server URL for an agent relay - leave as ''None'' to enable agents to communicate with server directly.'
  docker-swarm-sg:
    type: string
    description: 'Generated to reference a security group'
    label: Docker Swarm Sg
parameter_groups:
    - { label: 'Agent Parameters', parameters: [application_name, environment_name, ucd_password, ucd_server_url, ucd_user] }
    - { label: 'Network Parameters', parameters: [private_network_id] }
    - { label: 'Security Parameters', parameters: [docker-swarm-sg] }
resources:
  worker-srv:
      type: OS::Nova::Server
      properties:
        user_data: {get_resource: worker_mime}
        user_data_format: RAW
        networks:
            - port: { get_resource: worker__to__private_network_id__port  }
        name: worker
        image: {get_param: worker }  # ubuntu-14.04-amd64
        flavor: { get_param: flavor }
        key_name: { get_param: key_name }
        availability_zone: { get_param: availability_zone }
        metadata: 
          "__os_type__" : "Linux"


  docker-engine1:
    depends_on: docker-engine
    type: IBM::UrbanCode::SoftwareDeploy::UCD
    properties:
      apply_config: { get_resource: docker-engine_sw_config1 }
      server: worker-srv
      version: '1.13'
      agent_timeout: "360"

  docker-engine_sw_config1:
    type: IBM::UrbanCode::SoftwareConfig::UCD
    properties: 
      name: "docker-engine"
      component_process: 'join docker swarm as worker'
      component_process_timeout: "300"
      ucd_server_url: { get_param: ucd_server_url } # these should come from resource_tree
      ucd_username: { get_param: ucd_user }
      ucd_password: { get_param: ucd_password }
      application: { get_param: application_name }
      environment_name: { get_param: environment_name }

  worker_mime:
    type: OS::Heat::MultipartMime
    properties:
      parts:
        - config: { get_resource: ucd_agent_install_linux }
          subtype: "x-shellscript"

  docker-engine:
    type: IBM::UrbanCode::SoftwareDeploy::UCD
    properties:
      apply_config: { get_resource: docker-engine_sw_config }
      server: worker-srv
      version: '1.13'
      agent_timeout: "360"

  docker-engine_sw_config:
    type: IBM::UrbanCode::SoftwareConfig::UCD
    properties: 
      name: "docker-engine"
      component_process: 'install docker-engine'
      component_process_timeout: "300"
      ucd_server_url: { get_param: ucd_server_url } # these should come from resource_tree
      ucd_username: { get_param: ucd_user }
      ucd_password: { get_param: ucd_password }
      application: { get_param: application_name }
      environment_name: { get_param: environment_name }

  worker__to__private_network_id__port:
    type: OS::Neutron::Port
    properties:
      security_groups:
          - { get_param: docker-swarm-sg }
      network_id: { get_param: private_network_id }
      replacement_policy: AUTO   #TODO remove this if using HEAT version Icehouse!

  ucd_agent_install_linux:
    type: OS::Heat::SoftwareConfig
    properties:
      config:
        str_replace:
          template: |
            #!/usr/bin/env bash
            #ifconfig eth0 mtu 1454 ## Optionally patch the MTU
            export PATH=$PATH:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/root/bin
            arch=`uname -ms | awk '{print tolower($0)}' | tr " " "-" `
            agent_archive=ibm-ucd-agent-$arch.tgz
            if [ "_ucd_relay_url_" != "None" ]; then
              proxy_args="--proxy _ucd_relay_url_:20080"
              ucd_remote_host=_ucd_relay_url_
              agent_args="-r -d"
            else
              proxy_args=
              agent_args=
              ucd_remote_host=_ucd_server_url_
            fi
            if command -V apt-get && ! command -V curl; then apt-get -y install curl; fi
            if command -V yum && ! command -V curl; then yum -y install curl; fi
            curl $proxy_args -Lk --retry 10 --retry-delay 10 --retry-max-time 120 -o /tmp/$agent_archive -u _ucd_user_:_ucd_password_ "_ucd_server_url_/cli/version/downloadArtifacts?component=ucd-agent-$arch&version=_agent_version_&singleFilePath=$agent_archive"
            tar xfz /tmp/$agent_archive -C /tmp
            /tmp/ibm-ucd-agent-install/install-agent-with-options.sh -t "_agent_team_" -s $ucd_remote_host $agent_args -x start -v -n _agent_name_
          params:
            _agent_name_:
               str_replace:
                  template: |
                    "_application_name_._environment_name_"
                  params:
                    _application_name_: { get_param: application_name }
                    _environment_name_: { get_param: "OS::stack_name" }
            _ucd_server_url_: { get_param: ucd_server_url }
            _ucd_relay_url_: { get_param: ucd_relay_url }
            _ucd_user_ : { get_param: ucd_user }
            _ucd_password_ : { get_param: ucd_password }
            _agent_version_ : 7.1
            _agent_team_ : ""

outputs:
  blueprint_url:
    description: Blueprint Origin URL
    value:  http://192.168.27.100:9080/landscaper/view/projects?open=demo_d3c9ba14_1a63_4ce0_bb87_109b5be227b9-OrionContent/demo/nested/docker-swarm_worker.yml

